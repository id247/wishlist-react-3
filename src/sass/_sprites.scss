/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$delete-name: 'delete';
$delete-x: 148px;
$delete-y: 90px;
$delete-offset-x: -148px;
$delete-offset-y: -90px;
$delete-width: 30px;
$delete-height: 30px;
$delete-total-width: 193px;
$delete-total-height: 175px;
$delete-image: '../images/sprite.png';
$delete: (148px, 90px, -148px, -90px, 30px, 30px, 193px, 175px, '../images/sprite.png', 'delete', );
$logotype-name: 'logotype';
$logotype-x: 0px;
$logotype-y: 0px;
$logotype-offset-x: 0px;
$logotype-offset-y: 0px;
$logotype-width: 148px;
$logotype-height: 52px;
$logotype-total-width: 193px;
$logotype-total-height: 175px;
$logotype-image: '../images/sprite.png';
$logotype: (0px, 0px, 0px, 0px, 148px, 52px, 193px, 175px, '../images/sprite.png', 'logotype', );
$menu-bags-name: 'menu-bags';
$menu-bags-x: 90px;
$menu-bags-y: 130px;
$menu-bags-offset-x: -90px;
$menu-bags-offset-y: -130px;
$menu-bags-width: 45px;
$menu-bags-height: 45px;
$menu-bags-total-width: 193px;
$menu-bags-total-height: 175px;
$menu-bags-image: '../images/sprite.png';
$menu-bags: (90px, 130px, -90px, -130px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-bags', );
$menu-diaries-name: 'menu-diaries';
$menu-diaries-x: 53px;
$menu-diaries-y: 79px;
$menu-diaries-offset-x: -53px;
$menu-diaries-offset-y: -79px;
$menu-diaries-width: 45px;
$menu-diaries-height: 45px;
$menu-diaries-total-width: 193px;
$menu-diaries-total-height: 175px;
$menu-diaries-image: '../images/sprite.png';
$menu-diaries: (53px, 79px, -53px, -79px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-diaries', );
$menu-folders-name: 'menu-folders';
$menu-folders-x: 98px;
$menu-folders-y: 79px;
$menu-folders-offset-x: -98px;
$menu-folders-offset-y: -79px;
$menu-folders-width: 45px;
$menu-folders-height: 45px;
$menu-folders-total-width: 193px;
$menu-folders-total-height: 175px;
$menu-folders-image: '../images/sprite.png';
$menu-folders: (98px, 79px, -98px, -79px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-folders', );
$menu-hobby-name: 'menu-hobby';
$menu-hobby-x: 148px;
$menu-hobby-y: 0px;
$menu-hobby-offset-x: -148px;
$menu-hobby-offset-y: 0px;
$menu-hobby-width: 45px;
$menu-hobby-height: 45px;
$menu-hobby-total-width: 193px;
$menu-hobby-total-height: 175px;
$menu-hobby-image: '../images/sprite.png';
$menu-hobby: (148px, 0px, -148px, 0px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-hobby', );
$menu-pen-cases-name: 'menu-pen-cases';
$menu-pen-cases-x: 148px;
$menu-pen-cases-y: 45px;
$menu-pen-cases-offset-x: -148px;
$menu-pen-cases-offset-y: -45px;
$menu-pen-cases-width: 45px;
$menu-pen-cases-height: 45px;
$menu-pen-cases-total-width: 193px;
$menu-pen-cases-total-height: 175px;
$menu-pen-cases-image: '../images/sprite.png';
$menu-pen-cases: (148px, 45px, -148px, -45px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-pen-cases', );
$menu-shoe-bags-name: 'menu-shoe-bags';
$menu-shoe-bags-x: 0px;
$menu-shoe-bags-y: 130px;
$menu-shoe-bags-offset-x: 0px;
$menu-shoe-bags-offset-y: -130px;
$menu-shoe-bags-width: 45px;
$menu-shoe-bags-height: 45px;
$menu-shoe-bags-total-width: 193px;
$menu-shoe-bags-total-height: 175px;
$menu-shoe-bags-image: '../images/sprite.png';
$menu-shoe-bags: (0px, 130px, 0px, -130px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-shoe-bags', );
$menu-stationery-name: 'menu-stationery';
$menu-stationery-x: 45px;
$menu-stationery-y: 130px;
$menu-stationery-offset-x: -45px;
$menu-stationery-offset-y: -130px;
$menu-stationery-width: 45px;
$menu-stationery-height: 45px;
$menu-stationery-total-width: 193px;
$menu-stationery-total-height: 175px;
$menu-stationery-image: '../images/sprite.png';
$menu-stationery: (45px, 130px, -45px, -130px, 45px, 45px, 193px, 175px, '../images/sprite.png', 'menu-stationery', );
$ozon-name: 'ozon';
$ozon-x: 0px;
$ozon-y: 52px;
$ozon-offset-x: 0px;
$ozon-offset-y: -52px;
$ozon-width: 131px;
$ozon-height: 27px;
$ozon-total-width: 193px;
$ozon-total-height: 175px;
$ozon-image: '../images/sprite.png';
$ozon: (0px, 52px, 0px, -52px, 131px, 27px, 193px, 175px, '../images/sprite.png', 'ozon', );
$star-name: 'star';
$star-x: 0px;
$star-y: 79px;
$star-offset-x: 0px;
$star-offset-y: -79px;
$star-width: 53px;
$star-height: 51px;
$star-total-width: 193px;
$star-total-height: 175px;
$star-image: '../images/sprite.png';
$star: (0px, 79px, 0px, -79px, 53px, 51px, 193px, 175px, '../images/sprite.png', 'star', );
$spritesheet-width: 193px;
$spritesheet-height: 175px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($delete, $logotype, $menu-bags, $menu-diaries, $menu-folders, $menu-hobby, $menu-pen-cases, $menu-shoe-bags, $menu-stationery, $ozon, $star, );
$spritesheet: (193px, 175px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
